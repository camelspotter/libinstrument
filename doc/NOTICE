generic {
	study and finalize license

	consider inter-collection methods (join, intersect, add)

	research converting types to immutables (more expensive, easier to use)
	
	check UNIX, Cygwin, MinGW, Android Linux portability
}


object {
	consider adding equals, hashcode, to_string, serialize
}


list {
	consider providing sorting
}


string {
	use std::regex (at least C++11) for portability

	implement i18n and l10n, convert to unicode or create a UTF-8 type

	consider adding slicing, is* checks

	test with advanced printf formats (with lengths, padding etc)

	research how to manipulate using specific number of characters
}


symtab {
	sort the table by address and implement binary lookup
}


thread {
	use std::thread (at least C++11) class for portability
	
	find a way to obtain current call arguments
}
